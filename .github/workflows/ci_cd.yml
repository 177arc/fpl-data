# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Restore cached dependencies
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements_ci_cd.txt; fi
    - name: Convert Jupyter notebook to code
      run: |
        jupyter nbconvert --to script prep_data.ipynb
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit tests
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd tests/integration
        python -m unittest discover -s "."
    - name: Create lambda package
      run: |
        mkdir dist
        zip -r dist/fpl-data.zip *.py *.ipnynb data/** fpldata/** -x *.pyc
    - name: Deploy to fpl-data-test lambda
      if: github.ref == 'refs/heads/develop'
      uses: appleboy/lambda-action@v0.0.7
      with:
        aws_region: eu-west-2
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        function_name: fpl-data-test
        zip_file: dist/fpl-data.zip
    - name: Invoke fpl-data-test Lambda
      id: fpl-data-test-invoke
      if: github.ref == 'refs/heads/develop'
      uses: gagoar/invoke-aws-lambda@master
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGION: eu-west-2
        FunctionName: fpl-data-test
        LogType: Tail
        Payload: '{}'
    - name: Store fpl-data-test logs to file
      if: github.ref == 'refs/heads/develop'
      run: echo "${{ fromJSON(steps.fpl-data-test-invoke.outputs.response).LogResult }}" > invocation-logs.json
    - name: Deploy to fpl-data lambda
      if: github.ref == 'refs/heads/master'
      uses: appleboy/lambda-action@v0.0.7
      with:
        aws_region: eu-west-2
        aws_access_key_id: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        function_name: fpl-data
        zip_file: dist/fpl-data.zip
